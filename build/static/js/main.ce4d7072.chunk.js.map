{"version":3,"sources":["App.jsx","index.jsx"],"names":["styles","button","display","color","fontSize","fontWeight","textDecoration","userSelect","padding","outline","border","borderRadius","background","boxShadow","transition","cursor","width","height","container","backgroundColor","justifyContent","alignItems","absoluteDiv","position","top","right","buttonSecondary","input","marginRight","App","clickingTimer","React","useState","clickCount","setClickCoutn","inititalClickCount","setInitialClickCount","style","onDoubleClick","value","clearTimeout","palindromResult","Error","arrayOfValue","String","split","i","length","isPalindrom","alert","e","message","bind","this","onClick","setTimeout","onChange","Number","target","isNaN","type","ReactDOM","render","document","getElementById"],"mappings":"4KAEMA,EAAS,CACbC,OAAQ,CACNC,QAAS,eACTC,MAAO,QACPC,SAAU,OACVC,WAAY,IACZC,eAAgB,OAChBC,WAAY,OACZC,QAAS,aACTC,QAAS,OACTC,OAAQ,4BACRC,aAAc,EACdC,WAAY,kEACZC,UAAW,oGACXC,WAAY,mCACZC,OAAQ,UACRC,MAAO,IACPC,OAAQ,IAEVC,UAAW,CACTC,gBAAiB,QACjBF,OAAQ,QACRf,QAAS,OACTkB,eAAgB,SAChBC,WAAY,UAEdC,YAAa,CACXC,SAAU,WACVC,IAAK,GACLC,MAAO,IAETC,gBAAiB,CACfV,MAAO,GACPC,OAAQ,IAEVU,MAAO,CACLX,MAAO,GACPC,OAAQ,GACRW,YAAa,IAsDFC,MAlDf,WAAgB,IAGVC,EAHS,SACuBC,IAAMC,SAAS,GADtC,mBACNC,EADM,KACMC,EADN,OAEsCH,IAAMC,SAAS,GAFrD,mBAENG,EAFM,KAEcC,EAFd,KAqCb,OACE,oCACA,yBAAKC,MAAOrC,EAAOkB,WACjB,4BAAQmB,MAAOrC,EAAOC,OAAQqC,cAlBZ,SAACC,GACrBC,aAAaV,GAEb,IACE,IAAMW,EArBU,SAAAF,GAClB,GAAqB,kBAAVA,EAAoB,MAAM,IAAIG,MAAM,wOAI/C,IAFA,IAAMC,EAAeC,OAAOL,GAAOM,MAAM,IAEhCC,EAAI,EAAGA,EAAIH,EAAaI,OAAQD,IAAK,CAC5C,GAAIH,EAAaG,KAAOH,EAAaA,EAAaI,OAASD,EAAI,GAAI,OAAO,EAC1E,GAAIA,EAAIH,EAAaI,OAAS,EAAG,OAAO,EAE1C,OAAO,EAYmBC,CAAYT,GAAS,2LAAuC,wMACpFU,MAAM,4DAAD,OAAgBV,EAAhB,cAA2BE,IAEhC,MAAMS,GACN,OAAOD,MAAMC,EAAEC,WAU4CC,KAAKC,KAAMpB,GAAaqB,QANjE,WACpBxB,EAAgByB,WAAWrB,EAAckB,KAAK,EAAMnB,EAAa,GAAI,OAKyCA,GAC5G,yBAAKI,MAAOrC,EAAOsB,aACjB,2BAAOiB,MAAOJ,EAAoBqB,SAAU,SAAAN,GAAC,OAzBpBX,EAyB+CkB,OAAOP,EAAEQ,OAAOnB,OAxBxFoB,MAAMpB,GAAeH,EAAqB,GACvCA,EAAqBG,GAFC,IAAAA,GAyBwEF,MAAOrC,EAAO2B,MAAOiC,KAAK,SAC3H,4BAAQN,QAASpB,EAAckB,KAAKC,KAAMlB,GAAqBE,MAAOrC,EAAO0B,iBAA7E,oECnFRmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ce4d7072.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n  button: {\r\n    display: 'inline-block',\r\n    color: 'black',\r\n    fontSize: '125%',\r\n    fontWeight: 700,\r\n    textDecoration: 'none',\r\n    userSelect: 'none',\r\n    padding: '.25em .5em',\r\n    outline: 'none',\r\n    border: '1px solid rgb(250,172,17)',\r\n    borderRadius: 7,\r\n    background: 'rgb(255,212,3) linear-gradient(rgb(255,212,3), rgb(248,157,23))',\r\n    boxShadow: 'inset 0 -2px 1px rgba(0,0,0,0), inset 0 1px 2px rgba(0,0,0,0), inset 0 0 0 60px rgba(255,255,0,0)',\r\n    transition: 'box-shadow .2s, border-color .2s',\r\n    cursor: 'pointer',\r\n    width: 110,\r\n    height: 40,\r\n  },\r\n  container: {\r\n    backgroundColor: 'black',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  absoluteDiv: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    right: 40,\r\n  },\r\n  buttonSecondary: {\r\n    width: 90,\r\n    height: 25\r\n  },\r\n  input: {\r\n    width: 40,\r\n    height: 25,\r\n    marginRight: 5\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [clickCount, setClickCoutn] = React.useState(0);\r\n  const [inititalClickCount, setInitialClickCount] = React.useState(0);\r\n  let clickingTimer;\r\n\r\n  const isPalindrom = value => {\r\n    if (typeof value !== 'number') throw new Error('Проверяемое на палиндром значение не число!');\r\n\r\n    const arrayOfValue = String(value).split('');\r\n\r\n    for (let i = 0; i < arrayOfValue.length; i++) {\r\n      if (arrayOfValue[i] !== arrayOfValue[arrayOfValue.length - i - 1]) return false;\r\n      if (i > arrayOfValue.length / 2) return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const checkInitialClickCount = value => {\r\n    if (isNaN(value)) return setInitialClickCount(0);\r\n    return setInitialClickCount(value);\r\n  }\r\n\r\n  const onDoubleClick = (value) => {\r\n    clearTimeout(clickingTimer);\r\n\r\n    try {\r\n      const palindromResult = isPalindrom(value) ? 'Данное число является палиндромом!' : 'Данное число не является палиндромом!';\r\n      alert(`Ваше число: ${value} \\n${palindromResult}`);\r\n\r\n    } catch(e) {\r\n      return alert(e.message);\r\n    }\r\n  }\r\n\r\n  const onSingleClick = () => {\r\n    clickingTimer = setTimeout(setClickCoutn.bind(this, clickCount + 1), 300);\r\n  }\r\n  return (\r\n    <>\r\n    <div style={styles.container}>\r\n      <button style={styles.button} onDoubleClick={onDoubleClick.bind(this, clickCount)} onClick={onSingleClick}>{clickCount}</button>\r\n      <div style={styles.absoluteDiv}>\r\n        <input value={inititalClickCount} onChange={e => checkInitialClickCount(Number(e.target.value))} style={styles.input} type=\"text\"/>\r\n        <button onClick={setClickCoutn.bind(this, inititalClickCount)} style={styles.buttonSecondary}>Установить</button>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}